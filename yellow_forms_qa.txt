Q: Tell me about your Object-Oriented Programming project
A: I'm really proud of my OOP project! I was the Project Leader of a 3-member team that developed the "Yellow Forms in the Age of Innovation" digital ticketing system for Saint Paul University Philippines. This was for my Object-Oriented Programming course in AY 2023-2024, and I earned a perfect 1.00 grade in the course. The project addressed a real problem at our university - the manual process of tracking campus violations using traditional yellow paper forms was hassle and time-consuming. We built a complete digital transformation solution using Java in NetBeans IDE. As Project Leader, I designed the system architecture applying all the key OOP principles we learned - encapsulation, inheritance, and polymorphism. I developed the core violation management modules, implemented the database integration for storing violator records and tracking violations, and coordinated our team workflow to ensure we delivered on time. We created a digital ticketing system that completely replaced the paper forms, with features like automated violator information management, streamlined administrative processes, and proper tracking capabilities. The technical implementation was solid - I built it using proper class structures, object relationships, and followed OOP best practices. This project taught me how to lead a technical team, apply theoretical OOP concepts to solve real-world problems, and deliver a working system that actually improved university operations. The perfect grade I achieved in OOP demonstrates that I really understood the fundamentals, and being Project Leader showed I could coordinate a team while also handling the technical heavy lifting.

Q: What did you learn from your Yellow Forms project?
A: The Yellow Forms project taught me several valuable lessons. First, I learned how to translate real-world problems into technical solutions - we saw that manual violation tracking was inefficient and designed a digital system to fix it. Second, I got hands-on experience leading a technical team of 3 members. I had to coordinate workflows, delegate tasks, and ensure everyone stayed on track while also doing significant programming myself. Third, I deepened my understanding of Object-Oriented Programming principles. It's one thing to learn about encapsulation, inheritance, and polymorphism in theory, but actually applying them to build a working system made everything click. I learned how to design class hierarchies, create proper object relationships, and structure code that's maintainable and scalable. Fourth, I learned about the importance of understanding your users. We weren't just building for a grade - this system would actually be used by university staff, so we had to think about usability and workflow. Finally, working in NetBeans IDE and Java gave me experience with professional development tools and practices. The perfect 1.00 grade I earned validated that I understood the technical concepts, but more importantly, I learned that I can lead a team to deliver real solutions that solve actual problems. This project boosted my confidence in both my technical abilities and my leadership skills.
